# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    action.yml                                         :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: agaley <agaley@student.42lyon.fr>          +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/11/08 01:07:00 by agaley            #+#    #+#              #
#    Updated: 2022/11/10 02:03:32 by agaley           ###   ########lyon.fr    #
#                                                                              #
# **************************************************************************** #

name: 'libftOps'
author: 'unkn0wn107'
description: 'CI pour ta libft'

runs:
    using: composite
    steps:
      - uses: actions/checkout@v2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v34

      - name: Clone libftTester
        uses: actions/checkout@v2
        with:
          repository: Tripouille/libftTester
          path: libftTester

      - name: Install Valgrind
        shell: bash
        run: sudo apt install valgrind

      - name: Test changed functions
        shell: bash
        run: |
          cd libftTester
          export error_found=0
          export TERM=xterm #For tput from libftTester/Makefile
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.h || $file == "Makefile" ]]; then
              echo ">>> $file changed - Test all functions <<<"
              funcnames=$(find ../ -type f -name "*.c" -print0 | xargs -I {} -0 -n1 bash -c "echo {} | rev | cut -c3- | rev | sed 's#../ft_##'")
              for funcname in $funcnames; do
                output=$(make $funcname)
                echo "$(echo "$output" | grep OK)"
                kos=$(echo "$output" | sed 's/KO you//g' | grep KO)
                if [[ "$kos" != "" ]]; then echo "$kos"; error_found=1; fi
              done
              exit error_found
            fi
          done
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ $file == *.c ]]; then
              filename=${file%.*}
              funcname=${filename:3}
              echo ">>> $file changed - Test $funcname"
              output=$(make $funcname)
              echo "$(echo "$output" | grep OK)"
              kos=$(echo "$output" | sed 's/KO you//g' | grep KO)
              if [[ "$kos" != "" ]]; then echo "$kos"; error_found=1; fi
            fi
          done
          exit error_found
